using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AssessmentApp
{
    internal class Polygon : Shape
    {
        static readonly int DeafultSideLength = 30;
        internal int SideCount { get; set; }
        internal int SideLength { get; set; }

        /// <summary>
        ///     A blank Triangle constructor that is used by the shape
        ///     factory. Uses the set default side parameter.
        /// </summary>
        public Polygon() : base()
        {
            SideLength = DeafultSideLength;
            SideCount = 5;
        }

        /// <summary>
        ///     The polygon object that is created as a template for future
        ///     polygons to created in line with. This constructor uses just
        ///     a parsed side count and a default side length.
        /// </summary>
        /// <param name="sideCount"></param>
        public Polygon(int sideCount) : base()
        {
            this.SideCount = sideCount;
            SideLength = DeafultSideLength;
        }

        /// <summary>
        ///     The polygon object that is created as a template for future
        ///     polygons to created in line with. This constructor uses a 
        ///     parsed side count and side length.
        /// </summary>
        /// <param name="colour"></param>
        /// <param name="x"></param>
        /// <param name="y"></param>
        /// <param name="side"></param>
        public Polygon(int sideCount, int sideLength)
        {
            this.SideCount = sideCount;
            this.SideLength = sideLength;
        }

        /// <summary>
        ///     Draw command for the polygon shape class.
        ///     A side count int must be parsed to be able to draw a shape.
        ///     If no ints are parsed then nothing will happen. If one int
        ///     is parsed, a polygon will be drawn with that number of sides.
        ///     If two ints are parsed, then a poly gone will be drawn with 
        ///     the first number of sides, and the second int will be used
        ///     to determin the size of each of the sides.
        ///     
        ///     The method of assigning the three points for the triangle was 
        ///     based of code generated by ChatGPT
        /// </summary>
        /// <param name="graphics"></param>
        public override void Draw(Graphics graphics)
        {
            GraphicsHandler graphicsHandler = GraphicsHandler.getInstance();
            Pen p = new Pen(graphicsHandler.color, 2);

            if (SideCount >= 3) // Ensure a valid number of sides
            {
                // Calculate the angles for each vertex of the polygon
                double angleIncrement = 2 * Math.PI / SideCount;

                // Initialize an array to store the vertices
                Point[] vertices = new Point[SideCount];

                // Calculate the vertices based on the angle and side length
                for (int i = 0; i < SideCount; i++)
                {
                    double angle = i * angleIncrement;
                    int x = graphicsHandler.x + (int)(SideLength * Math.Cos(angle));
                    int y = graphicsHandler.y - (int)(SideLength * Math.Sin(angle));
                    vertices[i] = new Point(x, y);
                }

                // Draw the polygon using the calculated vertices
                for (int i = 0; i < SideCount - 1; i++)
                {
                    graphics.DrawLine(p, vertices[i], vertices[i + 1]);
                }

                // Connect the last and first vertices to complete the shape
                graphics.DrawLine(p, vertices[SideCount - 1], vertices[0]);
            }
        }

        public override void Fill(Graphics graphics)
        {
            throw new NotImplementedException();
        }
    }
}
